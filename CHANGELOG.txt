**v0.29.1**
### Important updates:
1. Python 3.6 is deprecated in tests and by default, try to move to Python3.7, but better to 3.8, because 3.7 will be deprecated in 2023.

### Fixes
1. Fix for https://github.com/xnuinside/simple-ddl-parser/issues/177

### Imporvements
1. Added support for Oracle 2 component size for types, like '30 CHAR'. From https://github.com/xnuinside/simple-ddl-parser/issues/176


**v0.29.0**

### Fixes
1.  AUTOINCREMENT statement now parsed validly same way as AUTO_INCREMENT and showed up in output as 'autoincrement' property of the column
Fix for: https://github.com/xnuinside/simple-ddl-parser/issues/170
2. Fix issue ' TypeError argument of type 'NoneType' is not iterable' on some foreigen keys https://github.com/xnuinside/simple-ddl-parser/issues/148 

### New Features

1. Support for non-numeric column type parameters https://github.com/xnuinside/simple-ddl-parser/issues/171 
It shows in column attribute 'type_parameters'.


**v0.28.1**
Imporvements:
1. Lines started with INSERT INTO statement now successfully ignored by parser (so you can keep them in ddl - they will be just skiped)

Fixes:
1. Important fix for multiline comments


**v0.28.0**

Important Changes (Pay attention):
1. Because of parsing now AUTO_INCREMENT as a separate property of column previous output changed. 
Previously it was parsed as a part of type like:  'INT AUTO_INCREMENT'. 
Now type will be only 'INT', but in column property you will see 'autoincrement': True.

Amazing innovation:
1. It's is weird to write in Changelog, but only in version 0.28.0 I recognize that floats that not supported by parser & it was fixed.
Thanks for the sample in the issue: https://github.com/xnuinside/simple-ddl-parser/issues/163

Improvements:
MariaDB:
1. Added support for MariaDB AUTO_INCREMENT (from ddl here - https://github.com/xnuinside/simple-ddl-parser/issues/144)
If column is Auto Incremented - it indicated as 'autoincrement': True in column defenition

Common:
1. Added parsing for multiline comments in DDL with `/* */` syntax.
2. Comments from DDL now all placed in 'comments' keyword if you use `group_by_type=` arg in parser.
3. Added argument 'parser_settings={}' (dict type) in method  parse_from_file() - this way you can pass any arguments that you want to DDLParser (& that supported by it)
So, if you want to set log_level=logging.WARNING for parser - just use it as:
parse_from_file('path_to_file', parser_settings={'log_level': logging.WARNING}). For issue: https://github.com/xnuinside/simple-ddl-parser/issues/160

**v0.27.0**

Fixes:
1. Fixed parsing CHECKS with IN statement - https://github.com/xnuinside/simple-ddl-parser/issues/150
2. @# symbols added to ID token - (partialy) https://github.com/xnuinside/simple-ddl-parser/issues/146


Improvements:

1. Added support for '*' in size column (ORACLE dialect) - https://github.com/xnuinside/simple-ddl-parser/issues/151
2. Added arg 'debug' to parser, works same way as 'silent' - to get more clear error output. 

New features:
1. Added support for ORACLE 'ORGANIZATION INDEX' 
2. Added support for SparkSQL Partition by with procedure call - https://github.com/xnuinside/simple-ddl-parser/issues/154
3. Added support for DEFAULT CHARSET statement MySQL - https://github.com/xnuinside/simple-ddl-parser/issues/153


**v0.26.5**

Fixes:
1. Parsetab included in builds.
2. Added additional argumen log_file='path_to_file', to enable logging to file with providen name.

**v0.26.4**

1. Bugfix for (support CREATE OR REPLACE with additional keys like transient/temporary): https://github.com/xnuinside/simple-ddl-parser/issues/133

**v0.26.3**

Improvements:
1. Added support for OR REPLACE in CREATE TABLE: https://github.com/xnuinside/simple-ddl-parser/issues/131
2. Added support for AUTO INCREMENT in column:https://github.com/xnuinside/simple-ddl-parser/issues/130


**v0.26.2**

Fixes:
1. Fixed a huge bug for incorrect parsing lines with 'USE' & 'GO' strings inside.
2. Fixed parsing for CREATE SCHEMA for Snowlake & Oracle DDLs

Improvements:
1. Added  COMMENT statement for CREATE TABLE ddl (for SNOWFLAKE dialect support)
2. Added  COMMENT statement for CREATE SCHEMA ddl (for SNOWFLAKE dialect support)


**v0.26.1**

Fixes:

1. support Multiple SERDEPROPERTIES  - https://github.com/xnuinside/simple-ddl-parser/issues/126
2. Fix for issue with LOCATION and TBLPROPERTIES clauses in CREATE TABLE LIKE - https://github.com/xnuinside/simple-ddl-parser/issues/125
3. LOCATION now works correctly with double quote strings


**v0.26.0**
Improvements:

1. Added more explicit debug message on Statement errors - https://github.com/xnuinside/simple-ddl-parser/issues/116
2. Added support for "USING INDEX TABLESPACE" statement in ALTER - https://github.com/xnuinside/simple-ddl-parser/issues/119
3. Added support for IN statements in CHECKS - https://github.com/xnuinside/simple-ddl-parser/issues/121

New features:
1. Support SparkSQL USING - https://github.com/xnuinside/simple-ddl-parser/issues/117
Updates initiated by ticket https://github.com/xnuinside/simple-ddl-parser/issues/120:
2. In Parser you can use argument json_dump=True in method .run() if you want get result in JSON format. 
- README updated

Fixes:
1. Added support for PARTITION BY one column without type
2. Alter table add constraint PRIMARY KEY - https://github.com/xnuinside/simple-ddl-parser/issues/119
3. Fix for paring SET statement - https://github.com/xnuinside/simple-ddl-parser/pull/122
4. Fix for disappeared colums without properties - https://github.com/xnuinside/simple-ddl-parser/issues/123

**v0.25.0**
## Fixes:

1. Fix for issue with 'at time zone' https://github.com/xnuinside/simple-ddl-parser/issues/112

## New features:

1. Added flag to raise errors if parser cannot parse statement DDLParser(.., silent=False) - https://github.com/xnuinside/simple-ddl-parser/issues/109
2. Added flag to DDLParser(.., normalize_names=True) that change output of parser:
if flag is True (default 'False') then all identifiers will be returned without '[', '"' and other delimeters that used in different SQL dialects to separate custom names from reserverd words & statements.
For example, if flag set 'True' and you pass this input: 

CREATE TABLE [dbo].[TO_Requests](
    [Request_ID] [int] IDENTITY(1,1) NOT NULL,
    [user_id] [int]

In output you will have names like 'dbo' and 'TO_Requests', not '[dbo]' and '[TO_Requests]'.

**v0.24.2**
## Fixes:

1. Fix for the issue: https://github.com/xnuinside/simple-ddl-parser/issues/108 (reserved words can be used as table name after '.')


**v0.24.1**

## Fixes:
### HQL: 
1. fields_terminated_by now parses , as "','", not as '' previously

### Common:
1. To output added 'if_not_exists' field in result to get availability 1-to-1 re-create ddl by metadata. 

**v0.24.0**

## Fixes:

### HQL: 

1. More then 2 tblproperties now are parsed correctly https://github.com/xnuinside/simple-ddl-parser/pull/104 


### Common:

2. 'set' in lower case now also parsed validly.
3. Now names like 'schema', 'database', 'table' can be used as names in CREATE DABASE | SCHEMA | TABLESPACE | DOMAIN | TYPE statements and after INDEX and CONSTRAINT. 
4. Creation of empty tables also parsed correctly (like CREATE Table table;).

## New Statements Support: 

### HQL: 
1. Added support for CLUSTERED BY - https://github.com/xnuinside/simple-ddl-parser/issues/103
2. Added support for  INTO ... BUCKETS
3. CREATE REMOTE DATABASE | SCHEMA

**v0.23.0**

Big refactoring: less code complexity & increase code coverage. Radon added to pre-commit hooks.

### Fixes:

1. Fix for issue with ALTER UNIQUE - https://github.com/xnuinside/simple-ddl-parser/issues/101 

### New Features

1. SQL Comments string from DDL now parsed to "comments" key in output.

PostgreSQL:

2. Added support for ALTER TABLE ONLY | ALTER TABLE IF EXISTS

**v0.22.5**
### Fixes:

1. Fix for issue with '<' - https://github.com/xnuinside/simple-ddl-parser/issues/89


**v0.22.4**
### Fixes:

### BigQuery:
1. Fixed issue with parsing schemas with project in name.
2. Added support for multiple OPTION() statements

**v0.22.3**
### Fixes:

### BigQuery:
1. CREATE TABLE statement with 'project_id' in format like project.dataset.table_name now is parsed validly. 
'project' added to output. 
Also added support project.dataset.name format in CREATE SCHEMA and ALTER statement


**v0.22.2**
### Fixes:
1. Fix for the issue: https://github.com/xnuinside/simple-ddl-parser/issues/94 (column name starts with CREATE)

**v0.22.1**
### New Features:

## BigQuery:

1. Added support for OPTION for full CREATE TABLE statement & column definition

## Improvements:
1. CLUSTED BY can be used without ()


**v0.22.0**
### New Features:

## BigQuery:

I started to add partial support for BigQuery

1. Added support for OPTIONS in CREATE SCHEMA statement

## MSSQL:

1. Added support for PRIMARY KEY CLUSTERED - full details about clusterisation are parsed now in separate key 'clustered_primary_key'. 
I don't like that but when I started I did not thought about all those details, so in version 1.0.* I will work on more beutiful and logically output structure.
https://github.com/xnuinside/simple-ddl-parser/issues/91

Pay attention: previously they parsed somehow, but in incorrect structure.

### Improvements:

1. Strings in double quotes moved as separate token from ID to fix a lot of issues with strings with spaces inside
2. Now parser can parse statements separated by new line also (without GO or ; at the end of statement) - https://github.com/xnuinside/simple-ddl-parser/issues/90 

### Fixes:

1. Now open strings is not valid in checks (previously the was parsed.) Open string sample 'some string (exist open quote, but there is no close quote) 
2. Order like ASC, DESK in primary keys now parsed valid (not as previously as column name)

**v0.21.2**
Fixies:
1. remove 'PERIOD' from tokens

**v0.21.1**
Fixies:
1. START WITH, INCREMENT BY and CACHE (without value) in sequences now is parsed correctly.


**v0.21.0**
### New Features:

    ## MSSQL:

    1. Added support for statements: 
        1. PERIOD FOR SYSTEM_TIME in CREATE TABLE statement
        2. ON [PRIMARY] after CREATE TABLE statement (sample in test files test_mssql_specific.py)
        3. WITH statement for TABLE properties
        4. TEXTIMAGE_ON statement
        5. DEFAULT NEXT VALUE FOR in COLUMN DEFAULT
    
    2. Added support for separating tables DDL by 'GO' statement as in output of MSSQL
    3. Added support for CREATE TYPE as TABLE

**v0.20.0**
### New Features:

    #### Common
    1. SET statements from DDL scripts now collected as type 'ddl_properties' (if you use group_by_type=True) and parsed as
    dicts with 2 keys inside {'name': 'property name', 'value': 'property value'}

    #### MySQL
    2. Added support for MySQL ON UPDATE statements in column (without REFERENCE)

    #### MSSQL
    3. Added support for CONSTRAINT [CLUSTERED]... PRIMARY KEY for Table definition
    4. Added support for WITH statement in CONSTRAINT (Table definition)


**v0.19.9**
1. Fixed issue with the weird log - https://github.com/xnuinside/simple-ddl-parser/issues/78.


**v0.19.8**
Features:
    1. Method `DDLParser(...).run(...)` now get argument json=True if you want to get result as json,
    but not as Python Object

Fixes:
    1. Fixed issue when variables are 'glue' during Struct parse like previously STRUCT<a ARRAY<STRING>,b BOOL> was
    extracted like 'STRUCT <aARRAY <STRING>,bBOOL>', now this issue was fixed and it parsed as is STRUCT < a
    ARRAY < STRING > ,b BOOL >. Now '>' and '<' always will be with space near them.

    2. CHECK CONSTRAINT with functions. Fix for https://github.com/xnuinside/simple-ddl-parser/issues/76.


**v0.19.7**
Fixes:
1. Add support for more special symbols to strings - https://github.com/xnuinside/simple-ddl-parser/issues/68

Features:
1. Added support for HQL statements:
    STORED AS INPUTFORMAT, OUTPUTFORMAT - https://github.com/xnuinside/simple-ddl-parser/issues/69
    SKEWED BY

**v0.19.6**
Fixes:

1. Fixed issue with PARTITIONED BY multiple columns in HQL - https://github.com/xnuinside/simple-ddl-parser/issues/66
2. Question symbol '?' now handled valid in strings - https://github.com/xnuinside/simple-ddl-parser/issues/64
3. Fixed issue with escaping symbols & added tests -https://github.com/xnuinside/simple-ddl-parser/issues/63

Features:

1. Added support for HQL statement TBLPROPERTIES - https://github.com/xnuinside/simple-ddl-parser/issues/65

**v0.19.5**
Fixes:

1. Fixed issues with COMMENT statement in column definitions. Add bunch of tests, now they expect working ok.


**v0.19.4**
1. Added support for PARTITION BY (previously was only PARTITIONED BY from HQL)

**v0.19.2**
1. Added support for ` quotes in column & tables names

**v0.19.1**
Fixes:
1. Issue with '\t' reported in https://github.com/xnuinside/simple-ddl-parser/issues/53

Features:
1. Added base for future BigQuery support: added output_mode="bigquery". Pay attention that there is no schemas in BigQuery, so schemas are Datasets.


**v0.19.0**
**Features**

1. Added support for base Snowflake SQL Dialect.
Added new --output-mode='snowflake' (add "clone" key)

Added support for CREATE .. CLONE with same behaviour as CREATE .. LIKE
Added support for CREATE .. CLONE for schemas and database - displayed in output as {"clone": {"from": ... }}
CREATE TABLE .. CLUSTER BY ..
CONSTRAINT .. [NOT] ENFORCED (value stored in 'primary_key_enforced')

2. in CREATE DATABASE properties that goes after name like key=value now parsed valid. Check examples in tests
3. Added support for varchar COLLATE column property

**v0.18.0**
**Features**
1. Added base support fot AWS Redshift SQL dialect. 
Added support for ENCODE property in column.
Added new --output-mode='redshift' that add to column 'encrypt' property by default.
Also add table properties: distkeys, sortkey, diststyle, encode (table level encode), temp.

Supported Redshift statements: SORTKEY, DISTSTYLE, DISTKEY, ENCODE

CREATE TEMP / TEMPORARY TABLE

syntax like with LIKE statement:

create temp table tempevent(like event); 

**v0.17.0**
1. All dependencies were updated for the latest version.
2. Added base support for CREATE [BIGFILE | SMALLFILE] [TEMPORARY] TABLESPACE 
3. Added support for create table properties like `TABLESPACE user_data ENABLE STORAGE IN ROW CHUNK 8K RETENTION CACHE`
4. Added support for CREATE DATABASE statement

**v0.16.3**
1. Fixed issue then using columns names equals some tokens like, for example, `key` caused the error. 
But still words 'foreign' and 'constraint' as column names cause the empty result. I hope they rarely used.
Will be fixed in next releases.

**v0.16.2**
1. Fixed issue with enum in lowercase


**v0.16.0**
1. Fixed the issue when NULL column after DEFAULT used as default value.
2. Added support for generated columns, statatements: AS , GENERATED ALWAYS, STORED in Column Defenitions, in output it placed to key 'generated'. Keyword 'generated' showed only if column is generated.
3. Half of changelogs moved to ARCHIVE_CHANGELOG.txt
4. Added base support for CREATE DOMAIN statement
5. Added base support for CREATE SCHEMA [IF NOT EXISTS] ... [AUTHORIZATION] statement, added new type keyword 'schemas'
