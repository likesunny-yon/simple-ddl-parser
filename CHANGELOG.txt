**v0.12.1**
1. () after DEFAULT now does not cause an issue
2. ' and " does not lost now in DEFAULT values

**v0.12.0**
1. Added support for MSSQL: types with 2 words like 'int IDENTITY', 
FOREIGN KEY REFERENCES statement, supported 'max' as type size, CONSTRAINT ... UNIQUE statement in table defenition,
CONSTRAINT ... CHECK, CONSTRAINT ... FOREIGN KEY
2. Added output_mode types: 'mysql', 'mssql' for SQL Server, 'oracle'. If chosed one of the above - 
added key 'constraints' in table defenition by default. 'constraints' contain dict with keys 'uniques', 'checks', 'references'
it this is a COSTRAINT .. CHECK 'checks' key will be still in data output, but it will be duplicated to 'constraints': {'checks': ...}
3. Added support for ALTER ADD ... UNIQUE
4. Added support for CREATE CLUSTERED INDEX, if output_mode = 'mssql' then index will have additional arg 'clustered'.
5. Added support for DESC & NULLS in CREATE INDEX statements. Detailed information places in key 'detailed_columns' in 'indexes', example: '
'index': [{'clustered': False,
                'columns': ['extra_funds'],
                'detailed_columns': [{'name': 'extra_funds',
                                        'nulls': 'LAST',
                                        'order': 'ASC'}],
6. Added support for statement ALTER TABLE ... ADD CONSTRAINT ... DEFAULT ... FOR ... ;

**v0.11.0**
1. Now table can has name 'table'
2. Added base support for statement CREATE TYPE:  AS ENUM, AS OBJECT, INTERNALLENGTH, INPUT, OUTPUT (not all properties & types supported yet.)
3. Added argument 'group_by_type' in 'run' method that will group output by type of parsed entities like: 
'tables': [all_pasrsed_tables], 'sequences': [all_pasrsed_sequences], 'types': [all_pasrsed_types], 'domains': [all_pasrsed_domains]
4. Type in column defenition also can be "schema"."YourCustomType"
5. " now are not dissapeared if you use them in DDL.

**v0.10.2**
1. Fix regex that find '--' in table names (to avoid issue with -- comment lines near string defaults)

**v0.10.1**
1. Added support for CREATE TABLE ... LIKE statement
2. Add support for DEFERRABLE INITIALLY, NOT DEFERRABLE statements

**v0.9.0**
1. Added support for REFERENCES without field name, like `product_no integer REFERENCES products ON DELETE RESTRICT`
2. Added support for REFERENCES ON statement

**v0.8.1**
1. Added support for HQL Structured types like ARRAY < STRUCT <street: STRING, city: STRING, country: STRING >>, 
MAP < STRING, STRUCT < year: INT, place: STRING, details: STRING >>, 
STRUCT < street_address: STRUCT <street_number: INT, street_name: STRING, street_type: STRING>, country: STRING, postal_code: STRING >

**v0.8.0**
1. To DDLParser's run method was added 'output_mode' argument that expect valur 'hql' or 'sql' (by default).
Mode change result output. For example, in hql exists statement EXTERNAL. If you want to see in table information 
is it EXTERNAL table or not - you need to set 'hql' output_mode.
2. Added suppport for hql EXTERNAL statement, STORED AS statement, LOCATION statement
3. Added suppport for PARTITIONED BY statement (for both hql & sql)
4. Added support for HQL ROW FORMAT statement, FIELDS TERMINATED BY statement, COLLECTION ITEMS TERMINATED BY statement, MAP KEYS TERMINATED BY statement
